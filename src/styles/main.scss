/* Imports */

@import 'imports/reset';
// Right from the Google Maps API example to get the map to display
html,
body {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden; // Disallow scrolling to see offscreen elements on mobile.
}

button:disabled {
    background-color: #ccc; // Differentiate look of disabled buttons.
}

/*** Animate sort buttons in the list div when hovering over them ***/

.button-hover {
    border: 2px solid black;
    padding-top: 10px;
}


/*** Sort buttons at the top of list div styles ***/

.button-flex {
    display: flex;
    text-align: center;
    :hover {
        @extend .button-hover;
    }
}


/*** Don't allow the children of button-list-flex to also generate borders when
hovering over any of them specifically. ***/

.button-list-flex h4:hover,
.button-list-flex p:hover,
.button-list-flex span:hover {
    border: none;
}


/*** The div for the buttons for each theatre in the list div ***/

.button-list-flex {
    display: flex;
    flex-direction: column;
    :hover {
        background-color: #e6e6e6;
        border: 2px solid black;
    }
}


/*** Background for alphabetical sort button in list div ***/

.button-red {
    background: linear-gradient(red, yellow);
    box-shadow: 2px 2px 6px red inset;
}


/*** Background for date founded sort button in list div ***/

.button-yellow {
    background: linear-gradient(green, teal);
    box-shadow: 2px 2px 6px green inset;
}


/*** All buttons inherit this class ***/

.button-all {
    border: 1px solid gray;
    cursor: pointer;
    cursor: hand;
}


/*** Buttons for each theatre in the list div ***/

.button-list {
    @extend .button-all;
    margin: 0.2em 0; // Separate the buttons
}


/*** Buttons at the top of list div for sorting. In flexbox. ***/

.button-50 {
    @extend .button-all;
    width: 50%;
    padding-top: 13px;
    height: 50px;
    font-size: 1.3em;
    font-weight: bold;
    color: white; // Need background color or else text is invisible.
}


/*** The map needs to have a specific size in order to display. ***/

#map {
    height: 100%;
    width: 100%;
    position: absolute;
    z-index: 1; // Map is behind everything else that appears.
}


/*** How long offscreen elements take to move on and off ***/

$transition-time: 0.35s;

/*** Both left-divs and right-divs inherit this. The width is determined in 
media queries. ***/

.off-screen {
    position: absolute;
    z-index: 2; // Should always be over the map.
    transition: $transition-time;
    top: 0;
    background-color: white;
}


/*** The div that pops out when a marker is accessed  ***/

.left-divs {
    @extend .off-screen;
    height: 30%;
}


/*** The list, twitter and filter divs ***/

.right-divs {
    @extend .off-screen;
    height: 100%;
    overflow: auto;
}


/*** Keep the buttons from colliding with the tab on the left of them ***/

#list-div ul {
    margin-left: 1em;
}


/*** All the right-div tabs for moving the divs on and off screen ***/

.tab-all {
    position: absolute;
    transition: $transition-time;
}


/*** Bottom most tab shown then right-divs are off screen  ***/

.tab-plain {
    @extend .tab-all;
    z-index: 3;
}


/*** Second layer tab with border that pulses into opacity when updates occur ***/

.tab-highlight {
    @extend .tab-all;
    opacity: 0;
    z-index: 4;
}


/*** Top layer tab that is visible when right divs are on screen. These are the 
tabs that are clicked to initiate all transitions, so it has to have the highest
z-index. ***/

.tab-back {
    @extend .tab-all;
    opacity: 0;
    /*** z-index has to be higher than left-div-on so that it is still clickable
        if the left-div is also open ***/
    z-index: 5; 
}


/*** Position of the tabs when corresponding divs are off screen ***/

.tab-off {
    right: 0%;
}


/*** Left div is on screen ***/

.left-div-on {
    left: 0%;
    z-index: 2; // Above the map but not above anything else.
}


/*** ***/

.right-div-on {
    right: 0%;
    /*** Needs to be higher than .tab-back otherwise those tabs are clickable 
        through the right-div ***/
    z-index: 6;
}

/*** This is the information in the left div that gets loaded from each marker 
***/

.current-display {
    margin: 0.5em;
}


/*** This is the div inclosing .current-display. We make sure that we can scroll
through the current display and that the buttons stay at the bottom. If we made
the height of current display the same effect would not result. ***/

#info-box {
    overflow: auto;
    height: 80%;
}


/*** The title of each theatre in the Info Windows appearing on markers ***/

.info-title {
    font-weight: bold;
    font-size: 1.15em;
}





/*** ***/

.list-title {
    font-size: 1.2em;
}


/*** ***/

.bolded-text {
    font-weight: bold;
}


/*** ***/

@media only screen and (min-width: 700px) {
    .right-divs {
        width: 30%;
    }
    .left-divs {
        width: 50%;
    }
    .tab-on {
        right: 30%;
    }
    .right-div-off {
        right: -30%;
    }
    .left-div-off {
        left: -50%;
    }
}


/*** ***/

@media only screen and (max-width: 700px) {
    .off-screen {
        width: 90%;
    }
    .tab-on {
        right: 90%;
    }
    .right-div-off {
        right: -90%;
    }
    .left-div-off {
        left: -90%;
    }
}
