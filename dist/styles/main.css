/*********************
Initial Page
*********************/
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/*** We need to make sure the html and body has a height in order to 
    accomodate the Google Map ***/
html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden;
  font-family: Georgia, Serif;
}

div,
li {
  box-sizing: border-box;
}

/*** Widely applied to divs that are taller than their container ***/
.scroll-div {
  overflow: auto;
}

.error-style, #map-error, #twitter-error {
  z-index: 1;
  position: absolute;
  top: 20%;
  margin: 1em;
  line-height: 1.5em;
  font-size: 1.5em;
}

/*** The map needs to have a specific size in order to display. ***/
#map {
  height: 100%;
  width: 100%;
  position: absolute;
  z-index: 1;
}

/*** How long offscreen elements take to move on and off ***/
/*** Both left-divs and right-divs inherit this. The width is determined in 
media queries. ***/
.off-screen, .left-divs, .right-divs {
  position: absolute;
  z-index: 2;
  transition: 0.15s;
  top: 0;
  background-color: white;
}

/*** The display div that pops out when a marker is accessed  ***/
.left-divs {
  height: 30%;
  width: 50%;
}

/*** Position of left-div when it is off screen ***/
.left-div-off {
  left: -50%;
}

/*** The list, twitter and filter divs ***/
.right-divs {
  height: 100%;
  width: 30%;
}

/*** Position of right divs when they are off screen ***/
.right-div-off {
  right: -30%;
}

/*** All the right-div tabs for moving the divs on and off screen ***/
.tab-all, .tab-plain, .tab-highlight, .tab-back {
  position: absolute;
  transition: 0.15s;
}

/*** Bottom most tab shown when right-divs are off screen  ***/
.tab-plain {
  z-index: 3;
}

/*** Second layer tab with border that pulses into opacity when updates occur ***/
.tab-highlight {
  opacity: 0;
  z-index: 4;
}

/*** Top layer tab that is visible when right divs are on screen. These are the 
tabs that are clicked to initiate all transitions, so it has to have the highest
z-index. ***/
.tab-back {
  cursor: pointer;
  cursor: hand;
  opacity: 0;
  /*** z-index has to be higher than left-div-on so that it is still clickable
      if the left-div is also open ***/
  z-index: 5;
}

/*** Position of the tabs when corresponding divs are off screen ***/
.tab-off {
  right: 0%;
}

/*** Position of the tab when the right tabs are on screen ***/
.tab-on {
  right: 30%;
}

footer {
  z-index: 2;
  width: 100%;
  position: absolute;
  height: 2em;
  bottom: 0;
  text-align: center;
  padding-right: 4em;
}

#credit-marker {
  position: absolute;
  z-index: 2;
  font-size: 1.2em;
  bottom: 0.5em;
}

#credit-div {
  position: absolute;
  z-index: 9;
  background-color: white;
  width: 100%;
  height: 6em;
  bottom: -20em;
  transition: 0.15s;
}

/*** This div prevents users from using the map before pressing enter-button ***/
#overlay-div {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 10;
}

/*** How long the transition from overlay to map takes ***/
/*** Button and borders hug the bottom left corner. ***/
.enter-button-shared, #enter-button, #load-button, .enter-button-border1, .enter-button-border2 {
  left: 0;
  bottom: 0;
  transition: 1.4s;
}

/*** The button that sends the overlay off screen ***/
#enter-button {
  position: absolute;
  z-index: 13;
  width: 40%;
  height: 50%;
  padding-top: 0.8em;
}
#enter-button p {
  font-size: 2em;
  position: relative;
  top: 40%;
  font-weight: bold;
}

/*** Graphic above the enter-button to signify loading. ***/
#load-button {
  position: absolute;
  z-index: 14;
  width: 40%;
  height: 50%;
}

/*** Part of graphic that moves around the load-button ***/
#load-mover {
  z-index: 15;
  width: 2em;
  height: 2em;
  top: 0;
  right: 100%;
  background: black;
  transition: 1s;
}

#load-mover.first-move {
  width: 100%;
}

#load-mover.second-move {
  height: 100%;
}

#load-mover.third-move {
  background: white;
}

#load-mover.fourth-move {
  opacity: 0;
}

#load-button.fourth-move {
  opacity: 0;
}

/*** The first border around the enter-button. ***/
.enter-button-border1 {
  position: absolute;
  z-index: 12;
  width: 50%;
  height: 60%;
}

/*** Second border around the enter-button ***/
.enter-button-border2 {
  position: absolute;
  z-index: 11;
  width: 60%;
  height: 70%;
}

/*** The title of the website. Positioning is handled word by word below. ***/
.title-text {
  z-index: 2;
  position: absolute;
  text-transform: uppercase;
  margin-top: 2%;
  transition: 1.4s;
}

/*** Positioning the word 'Theatre' in the title ***/
.title-theatre {
  font-size: 3em;
  left: 1em;
}

/*** Positioning the word 'in' in the title ***/
.title-in {
  font-size: 2em;
  left: 9em;
  top: 0.4em;
}

/*** Positioning the word 'Toronto' in the title ***/
.title-toronto {
  font-size: 3em;
  top: 1.1em;
  left: 2em;
}

/*** Right side of the overlay ***/
.right-overlay {
  transition: 1.4s;
  position: absolute;
  right: 0;
  height: 100%;
  width: 40%;
  z-index: 11;
}

/*** When the overlay is off, the right side moves its width over ***/
.right-overlay.overlay-off {
  right: -40%;
}

/*** When the overlay is off, border1 goes farther than its width, this 
is done to create a visual effect where the divs follow one another as some move
faster than others. ***/
.enter-button-border1.overlay-off {
  left: -60%;
}

/*** When the overlay is off, border2 goes farther than its width, this 
is done to create a visual effect where the divs follow one another as some move
faster than others. ***/
.enter-button-border2.overlay-off {
  left: -80%;
}

/*** When the overlay is off, enter-button goes off screen the same distance 
that its width is equal to. ***/
#enter-button.overlay-off {
  left: -40%;
}

/*** When the overlay is off, the word 'Toronto' joins the other title words in
a line. ***/
.title-toronto.overlay-off {
  top: 0;
  left: 7em;
}

/*** Fade out button when the javascript is not yet loaded ***/
#enter-button.button-disabled {
  cursor: auto;
  background: gray;
}

/*** For non-wide screens ***/
@media all and (max-width: 72em) {
  .enter-button-border2 {
    opacity: 0;
  }

  .enter-button-border1 {
    width: 60%;
    height: 70%;
  }

  /*** Hide the title 'Theatre in Toronto' behind the display div at all
  times. ***/
  .title-toronto.overlay-off {
    top: 1.1em;
    left: 1em;
  }

  .enter-button-border1.overlay-off {
    left: -80%;
  }
}
/*** Small desktops or tablets roughly. This media query only exists to make 
transitions when RESIZING look prettier, so it's rarely used. ***/
@media all and (max-width: 62em) {
  #enter-button {
    width: 50%;
    height: 60%;
  }

  #load-button {
    width: 50%;
    height: 60%;
  }

  #enter-button.overlay-off {
    left: -50%;
  }
}
/*** Phablet size roughly ***/
@media all and (max-width: 50em) {
  .enter-button-border1 {
    opacity: 0;
  }

  #enter-button {
    width: 60%;
    height: 70%;
  }

  #load-button {
    width: 60%;
    height: 70%;
  }

  #enter-button.overlay-off {
    left: -60%;
  }
}
/*** Small screens ***/
@media all and (max-width: 40em) {
  #enter-button {
    width: 100%;
  }

  #load-button {
    width: 100%;
  }

  #enter-button.overlay-off {
    left: -100%;
  }

  .right-overlay {
    right: -40%;
  }

  .title-theatre {
    left: 0.5em;
  }

  .title-in {
    left: 8.25em;
  }

  .title-toronto {
    left: 1.5em;
  }
}
/*** This is generally for landscape view on phones. ***/
@media all and (max-height: 26em) {
  .title-toronto {
    top: 0;
    left: 6.5em;
  }

  .title-theatre {
    left: 0.5em;
  }

  .title-in {
    left: 8.25em;
  }
}
/*********************
Dependencies
*********************/
/*********************
Starts offscreen
*********************/
/*** These styles do not influence anything in the opening screen and can be 
    loaded asynchronously if this will help with speed. ***/
/*** Cursor changes when hovering over button ***/
.button-clickable, .button-list-item, #credit-marker, .button-50-info {
  cursor: pointer;
  cursor: hand;
}

/*** Style for all buttons ***/
.button-style, #enter-button, .button-50-shared, .button-50, .button-50-info, .button-100, .button-filter-item {
  padding-top: 0.8em;
  font-weight: bold;
  cursor: pointer;
  cursor: hand;
  border-radius: 0.6em;
}

/*** Inherited by button-50 and button-50-info in _off_info_win.scss ***/
.button-50-shared, .button-50, .button-50-info {
  width: 50%;
}

/*** Buttons at the top of right divs sorting. In flexbox. ***/
.button-50 {
  height: 2.7em;
}

/*** Font sizes can be bumped up slight on larger screen ***/
@media only screen and (min-width: 55em) {
  .button-50 {
    font-size: 1.1em;
  }
}
/*** Animate buttons when hovering over them ***/
.button-hover, .button-flex :hover {
  border: 0.2em solid black;
}

/*** Sort buttons at the top of list div styles ***/
.button-flex {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  text-align: center;
}

/*** Applied to divs inside buttons so they don't draw additional borders ***/
.no-border:hover {
  border: none;
}

/*** Colour for all major buttons  ***/
.button-white {
  background: #f2f2f2;
  color: black;
  border: 0.1em solid black;
}

/*** Used for the uncheck all button in the filter div  ***/
.button-100 {
  width: 100%;
  padding-top: 0.8em;
  height: 2.7em;
  font-size: 1.3em;
  font-weight: bold;
}

/*** Used briefly in the Twitter error div ***/
.large-font {
  font-size: 1.8em;
}

/*** Used briefly in the Twitter error div ***/
.italic-font {
  font-style: italic;
}

/*** Used in list div theatres ***/
.text-center, .list-title {
  text-align: center;
}

/*** Used to increase year size in list div theatres ***/
.bump-size {
  font-size: 1.15em;
}

/*** Used for list div theatres ***/
.bolded-text {
  font-weight: bold;
}

/*** Right div is on screen ***/
.right-div-on {
  right: 0%;
  /*** z-index needs to be higher than .tab-back otherwise those tabs are 
      clickable through the right-div ***/
  z-index: 6;
}

/*** Left div is on screen ***/
.left-div-on {
  left: 0%;
  z-index: 2;
}

/*** This is the information in the left div that gets loaded from each marker 
***/
.current-display {
  margin: 0.5em;
}

/*** Title of the displayed theatre ***/
.display-title {
  font-size: 2em;
  margin: 0 0 0.25em 0.5em;
}

.display-link {
  color: maroon;
}
.display-link:hover {
  color: maroon;
}

/*** The list enumerating the directions to get to the theatre ***/
.directions {
  list-style-type: decimal;
  margin-left: 1em;
}

/*** List items in the directions list ***/
.direction {
  line-height: 1.35em;
}

/*** This is the div enclosing .current-display. We make sure that we can scroll
through the current display and that the buttons stay at the bottom. If we made
the height of current display the same effect would not result. ***/
#display-box {
  overflow: auto;
  height: 80%;
}

/*** Used to move buttons to the bottom of the display div ***/
#display-div {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

/*** Make the address line not act like a button div ***/
#address-line {
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center;
}
#address-line:hover {
  border: none;
}

/*** Make the address line 50% of its parent div. Done in this class instead of
in #address-line to increase readability of HTML ***/
.text-50 {
  width: 50%;
}

/*** This display div when it is extended to feature directions ***/
#display-div.direction-extention {
  height: 50%;
}

/*** Narrow screens like portrait phones need more access to the display div ***/
@media all and (max-width: 45em) {
  #display-div.direction-extention {
    height: 70%;
  }

  #display-box {
    height: 86%;
  }
}
/*** Short screens like landscape phones need even more access to the display 
div ***/
@media all and (max-height: 26em) {
  #display-div.direction-extention {
    height: 90%;
  }
}
/*** Thin border to mark end of list-div when it it open ***/
#list-div {
  border-left: 0.05em solid #d9d9d9;
}

/*** The div for the buttons for each theatre in the list div ***/
.button-list-flex {
  margin-left: 0.25em;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 90%;
}
.button-list-flex :hover {
  background-color: #e6e6e6;
  border: 0.05em solid black;
}

/*** Don't allow the children of button-list-flex to also generate borders when
hovering over any of them specifically. ***/
.button-list-flex h4:hover,
.button-list-flex p:hover,
.button-list-flex span:hover {
  border: none;
}

/*** Buttons for each theatre in the list div ***/
.button-list-item {
  margin: 0.2em 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  min-height: 4em;
  border-bottom: 0.05em solid black;
}

/*** Title of each theatre in the list div ***/
.list-title {
  font-size: 1.5em;
}

/*** This div appears under the twitter feeds and can be seen if the feeds fail
    to load. ***/
/*** Div that holds the list view for Twitter. ***/
#twitter-list {
  position: relative;
  z-index: 2;
  height: 90%;
}

/*** Div that holds the user view for Twitter ***/
#twitter-account {
  position: relative;
  z-index: 2;
  height: 85%;
}

/*** Title for user view ***/
#twitter-account-header {
  position: relative;
  z-index: 3;
  min-width: 100%;
  min-height: 1.5em;
  font-weight: bold;
  text-align: center;
  line-height: 2em;
  background: linear-gradient(orange, gold);
  box-shadow: 0.1em 0.1em 0.3em orange inset;
}

@media only screen and (max-width: 40em) {
  #twitter-error {
    font-size: 1.2em;
  }
}
/*** Color displayed when a filter button is pressed ***/
/*** Div that holds filter options ***/
#filter-div {
  border-left: 0.05em solid #d9d9d9;
}

/*** Container for all the filter buttons ***/
.button-filter-flex {
  margin-left: 0.25em;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 90%;
}

/*** On large screens ***/
@media only screen and (min-width: 55em) {
  /*** We can do a hover option, since it won't interfere with the .buttonOn 
      class like it does on mobile. ***/
  .button-filter-item:hover {
    background-color: #e6e6e6;
    border: 0.05em solid black;
  }

  /*** But we need to make hover conform with .buttonOn when both are present
      so that the hover doesn't confuse users whether an option is on or not. ***/
  .button-filter-item.buttonOn:hover {
    background-color: #6f6;
  }
}
/*** Each button in the filter div ***/
.button-filter-item {
  margin: 0.2em 0;
  min-height: 2em;
  border-bottom: 0.05em solid black;
  font-size: 1.4em;
  font-weight: bold;
  padding: 0.25em 0.5em;
}

/*** Applied when a button is toggled on in filter div. ***/
.buttonOn {
  background-color: #6f6;
  border: 0.05em solid black;
}

/*** Attributions in the credit div shouldn't be centered ***/
.attributions {
  text-align: left;
}

/*** Credit div should hug the bottom of the screen when it is on ***/
#credit-div.creditDivOn {
  bottom: 0;
}

/*** Helps ensure that the .button-50-infos can be displayed fully without
requiring a 2nd line for text. ***/
#opened-info-window {
  min-width: 16em;
}

/*** Title of each theatre in the Info Windows appearing on markers ***/
.info-title {
  font-weight: bold;
  font-size: 1.15em;
}

/*** Buttons at the bottom of InfoWindows. In flexbox. ***/
.button-50-info {
  height: 2.9em;
}

/*** Fade out button when the left-div is already on ***/
#left-div-open-button.button-disabled {
  cursor: auto;
  background: gray;
  box-shadow: initial;
  border: 0.15em solid black;
  color: black;
}

@media only screen and (max-width: 76em) {
  /*** Take up more space with the divs that start offscreen. ***/
  .right-divs {
    width: 40%;
  }

  .left-divs {
    width: 50%;
  }

  .tab-on {
    right: 40%;
  }

  .right-div-off {
    right: -40%;
  }
}
/*** For small displays ***/
@media only screen and (max-width: 65em) {
  /*** Take up more space with the divs that start offscreen. ***/
  .right-divs {
    width: 50%;
  }

  .left-divs {
    width: 60%;
  }

  .tab-on {
    right: 50%;
  }

  .right-div-off {
    right: -50%;
  }

  .left-div-off {
    left: -60%;
  }
}
/*** For small displays ***/
@media only screen and (max-width: 55em) {
  /*** Take up more space with the divs that start offscreen. ***/
  .right-divs {
    width: 60%;
  }

  .tab-on {
    right: 60%;
  }

  .right-div-off {
    right: -60%;
  }
}
/*** For small displays ***/
@media only screen and (max-width: 45em) {
  /*** Take up more space with the divs that start offscreen. ***/
  .off-screen, .left-divs, .right-divs {
    width: 70%;
  }

  .tab-on {
    right: 70%;
  }

  .right-div-off {
    right: -70%;
  }

  .left-div-off {
    left: -70%;
  }

  .left-divs {
    height: 45%;
  }
}
/*** For small displays ***/
@media only screen and (max-width: 40em) {
  /*** Take up more space with the divs that start offscreen. ***/
  .off-screen, .left-divs, .right-divs {
    width: 90%;
  }

  .tab-on {
    right: 90%;
  }

  .right-div-off {
    right: -90%;
  }

  .left-div-off {
    left: -90%;
  }
}
/*** Short screens like landscape phones need more access to the display div ***/
@media all and (max-height: 26em) {
  .left-divs {
    height: 80%;
  }
}
